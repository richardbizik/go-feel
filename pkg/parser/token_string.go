// Code generated by "stringer -type=Token"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOF-1]
	_ = x[WS-2]
	_ = x[IDENT-3]
	_ = x[AT-4]
	_ = x[DOUBLEQUOTE-5]
	_ = x[ASTERISK-6]
	_ = x[COMMA-7]
	_ = x[DOT-8]
	_ = x[COLON-9]
	_ = x[SEMICOLON-10]
	_ = x[PLUS-11]
	_ = x[HYPHEN-12]
	_ = x[LEFT_PARENTHESIS-13]
	_ = x[RIGHT_PARENTHESIS-14]
	_ = x[LEFT_BRACKET-15]
	_ = x[RIGHT_BRACKET-16]
	_ = x[SLASH-17]
	_ = x[EXCLAMATION_MARK-18]
	_ = x[TRUE-19]
	_ = x[FALSE-20]
	_ = x[AND-21]
	_ = x[OR-22]
	_ = x[NOT-23]
	_ = x[GT-24]
	_ = x[GTE-25]
	_ = x[LT-26]
	_ = x[LTE-27]
	_ = x[EQ-28]
	_ = x[NEQ-29]
	_ = x[NULL-30]
	_ = x[BETWEEN-31]
	_ = x[IN-32]
	_ = x[RETURN-33]
	_ = x[RANGE-34]
	_ = x[LIST-35]
	_ = x[CONTEXT-36]
	_ = x[FUNCTION-37]
	_ = x[EXTERNAL-38]
	_ = x[FOR-39]
	_ = x[SOME-40]
	_ = x[EVERY-41]
	_ = x[IF-42]
	_ = x[THEN-43]
	_ = x[ELSE-44]
	_ = x[SATISFIES-45]
}

const _Token_name = "ILLEGALEOFWSIDENTATDOUBLEQUOTEASTERISKCOMMADOTCOLONSEMICOLONPLUSHYPHENLEFT_PARENTHESISRIGHT_PARENTHESISLEFT_BRACKETRIGHT_BRACKETSLASHEXCLAMATION_MARKTRUEFALSEANDORNOTGTGTELTLTEEQNEQNULLBETWEENINRETURNRANGELISTCONTEXTFUNCTIONEXTERNALFORSOMEEVERYIFTHENELSESATISFIES"

var _Token_index = [...]uint16{0, 7, 10, 12, 17, 19, 30, 38, 43, 46, 51, 60, 64, 70, 86, 103, 115, 128, 133, 149, 153, 158, 161, 163, 166, 168, 171, 173, 176, 178, 181, 185, 192, 194, 200, 205, 209, 216, 224, 232, 235, 239, 244, 246, 250, 254, 263}

func (i Token) String() string {
	if i < 0 || i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
